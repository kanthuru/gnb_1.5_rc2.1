#/****************************************************************************************/
#/**                  Copyright (c) 2018, 2022 Skyworks Solutions Inc.                  **/
#/**         Any use of source code must be licensed under separate agreement           **/
#/****************************************************************************************/
#
# Sync Timing Driver Config file v3.3.0
#


##### The Following fields represent the global configuration information 
################################################################################################
[global]
################################################################################################

# Number of distinct applications that will connect to the driver core - Maximum is defined by SYNC_TIMING_MAX_APPLICATIONS in sync_timing_config.h
num_applications = 5

# Total number of applications instances that will connect to the driver core - Maximum is defined by SYNC_TIMING_MAX_APPLICATION_INSTANCES in sync_timing_config.h
num_application_instances = 16

# Folder where log files will be saved
log_folder = "/dev/null"
#log_folder = "/data/"





##### The Following fields represent the configuration information for the timing driver core 
################################################################################################
[core]
################################################################################################

# Logfile name - When specified all fileout logs from CORE module once registered with the logger, will go to this file
logfile = "synctimingdriver.log"

# Clear logfile at startup - when the application starts and registers with the core. 
# Set to 1 only if the application desires its own log file and wants it to be cleared at startup.
clear_logfile_startup = 0

# Display trace level in the log msg
trace_level_in_log_msg = 1

# Display module name in the log msg
module_name_in_log_msg = 1

# Display timestamp in the log msg
timestamp_in_log_msg = 1

# Use Mini timestamp instead of a detailed timestamp in the log msg
use_mini_timestamp = 0

# Display function name and line number in the log msg
func_info_in_log_msg = 1

# stdout log filter enabled
stdout_filter_enabled = 1

# stdout log filter trace level
# CRITICAL = 0,  LOG Level Critical
# ERROR    = 1,  LOG Level Error   
# WARNING  = 2,  LOG Level Warning
# INFO1    = 3,  LOG Level Info1
# INFO2    = 4,  LOG Level Info2
# INFO3    = 5,  LOG Level Info3
# DEBUG    = 6,  LOG Level Debug
# NONE     = 7,  LOG Level None - Trace Disabled
stdout_filter_loglevel = 3

# fileout log filter enabled
fileout_filter_enabled = 1

# fileout log filter trace level
fileout_filter_loglevel = 3

# Number of files around which to rotate logs; 
# Min = 1 and Max = 50; 
# Min and Max defined by SYNC_TIMING_MIN_LOG_ROTATE_FILES and SYNC_TIMING_MAX_LOG_ROTATE_FILES in sync_timing_config.h
fileout_num_rotate_files = 10

# Maximum size of each log file; 
# Min - 200KB and Max = 20MB; 
# Min and Max defined by SYNC_TIMING_MIN_LOG_FILE_SIZE and SYNC_TIMING_MAX_LOG_FILE_SIZE in sync_timing_config.h
fileout_max_file_size = 20971520

# Number of Timing devices supported - Min = 1; Maximum is defined by SYNC_TIMING_MAX_DEVICES in sync_timing_config.h
num_timing_devices = 1


################################################################################################
[core_timing_device_1]
################################################################################################

# Assign a unique name to this timing device/card
timing_device_name = "Raptor2-B0"

# Timing device communication interface : SPI = 0
timing_device_interface = 0

# OEM Datapath Interface : SPI = 0 - only SPI is supported
oem_datapath_interface = 0

# OEM Device Type : 0 = SYNC_TIMING_OEM_DEVICE_REF_EVB
oem_device_type = 0

##### The following represent OEM_Datapath_SPI_Configuration

# Linux SPI Device Name
oem_spi_devname = "/dev/spidev1."

# Linux SPI Device Id
oem_spi_devid = 0

# SPI Speed in Hertz
oem_spi_speed = 500000

# SPI Bits per word
oem_spi_bpw = 8

# SPI Mode
oem_spi_mode = 0

##### The following fields represent OEM_Datapath_I2C_Configuration

# TBD

##### The following fields represent OEM_RESETCTRL_Configuration

# OEM Main Reset GPIO PIN
oem_main_reset_pin = 287

##### The following fields represent OEM_IRQCTRL_Configuration

# Number of IRQ pin
oem_num_irq_pins = 1

# OEM IRQ PIN 0 Number
oem_irq_pin_0_num = 300

# OEM IRQ PIN 0 Trigger Type - 0 - Disable/None, 1 - Rising Edge, 2 - Falling Edge, 3 - Any
oem_irq_pin_0_trig_type = 1

##### The following represent OEM_TODOUTPUT_Configuration

# Linux TOD Output Device Name
oem_todoutput_devname = "/dev/ttyS"

# Linux TOD Output Device Id
oem_todoutput_devid = 1

# Speed in bps
oem_todoutput_speed = 115200

# databits
oem_todoutput_databits = 8

# parity
oem_todoutput_parity = 0

# stopbits
oem_todoutput_stopbits = 1

# flowctrl
oem_todoutput_flowctrl = 0

##### The following represent OEM_TODINPUT_Configuration

# Linux TOD Input Device Name
# AccuTime does not have a proper way to disable tod device
# when PTP client mode is in use. The only way to disable it
# is to set it to an invalid device node.
# For PTP GM mode, please uncomment the line below and comment
# out the "/dev/dontuse" config.
# oem_todinput_devname = "/dev/gnss"
oem_todinput_devname = "/dev/gnss"

# Linux TOD Input Device Id
oem_todinput_devid = 0

# Speed in bps
oem_todinput_speed = 9600

# databits
oem_todinput_databits = 8

# parity
oem_todinput_parity = 0

# stopbits
oem_todinput_stopbits = 1

# flowctrl
oem_todinput_flowctrl = 0

##### The following represent OEM_LEDCTRL_Configuration

# Number of LEDCTRL pin
oem_num_led_pins = 7

# PTP clock Sync LED
oem_led_0_ctrl_pin  = 288

# PTP Mode T-GM LED
oem_led_1_ctrl_pin  = 289

# PTP Mode TBC/TSC LED
oem_led_2_ctrl_pin  = 290

# PTP Mode APTS LED
oem_led_3_ctrl_pin  = 292

# PTP SyncE PLL LOL LED
oem_led_4_ctrl_pin  = 294

# PTP SYNCE_INPUT_1_LOS LED
oem_led_5_ctrl_pin  = 296

# PTP SYNCE_INPUT_2_LOS LED
oem_led_6_ctrl_pin  = 295


##### The following fields represent CLKDEVICE_Configuration (TOD HW)

# Number of Clock or TOD device connected to this timing card (Default = 1)
num_clock_devices = 2

[clock_device_1]

# Clock device type: 1 => Physical Host TOD HW (default); 2 => SW Derived TOD (Phase compensation); 3 => PLL HW VTOD (not supported as yet);
clock_device_type = 1

# Device managed by which module - 1 => OEM Layer (Default); 2 => CORE Driver;
clock_device_manager = 1

# Associated clock device ID; Ignored if set to 0xFF
clock_device_associated_tod_id = 0x2

# Linux PTP Hardware Clock Device Name - specify if OEM layer is managing the device
oem_ptpclock_devname = "/dev/ptp"

# Linux PTP Hardware Clock Device Id
oem_clock_devid = 0

# PLL PPS TS Channel Index
pll_pps_ts_chan_idx = 0

# GPS PPS TS Channel Index
gps_pps_ts_chan_idx = 0

[clock_device_2]

# Clock device type: 1 => Physical Host TOD  HW; 2 => Derived SW TOD; 3 => PLL HW VTOD (not supported as yet); (Default = 1)
clock_device_type = 2

# Device managed by which module - 1 => OEM Layer 2 => CORE Driver (Default = 1)
clock_device_manager = 2

# Associated clock device ID; Ignored if set to 0xFF; If not 0xFF, then it points to a clock_device_id that it is derived from and needs PHASE information when applicable.
clock_device_associated_tod_id = 0x1

##### The Following fields represent the configuration information for the various applications 

################################################################################################
[application_1]
################################################################################################

# Name of the application
app_name = "sync_timing_util"

# Display trace level in the log msg
trace_level_in_log_msg = 1

# Display module name in the log msg
module_name_in_log_msg = 1

# Display timestamp in the log msg
timestamp_in_log_msg = 1

# Use Mini timestamp instead of a detailed timestamp in the log msg
use_mini_timestamp = 0

# Display function name and line number in the log msg
func_info_in_log_msg = 1

# Logfile name - When specified all fileout logs from the application, once registered with the logger, will go to this file
logfile = "synctimingdriver.log"

# Clear logfile at startup - when the application starts and registers with the core. 
# Set to 1 only if the application desires its own log file and wants it to be cleared at startup.
clear_logfile_startup = 0

# stdout log filter enabled
stdout_filter_enabled = 1

# stdout log filter trace level
stdout_filter_loglevel = 2

# fileout log filter enabled
fileout_filter_enabled = 1

# fileout log filter trace level
fileout_filter_loglevel = 2

# Number of files around which to rotate logs
fileout_num_rotate_files = 20

# Maximum size of each log file
fileout_max_file_size = 20971520


################################################################################################
[application_2]
################################################################################################

# Name of the application
app_name = "sync_timing_ptp2stack"

# Display trace level in the log msg
trace_level_in_log_msg = 1

# Display module name in the log msg
module_name_in_log_msg = 0

# Display timestamp in the log msg
timestamp_in_log_msg = 1

# Use Mini timestamp instead of a detailed timestamp in the log msg
use_mini_timestamp = 1

# Display function name and line number in the log msg
func_info_in_log_msg = 0

# Logfile name - When specified all fileout logs from the application, once registered with the logger, will go to this file
logfile = "synctimingptp2.log"

# Clear logfile at startup - when the application starts and registers with the core. 
# Set to 1 only if the application desires its own log file and wants it to be cleared at startup.
clear_logfile_startup = 0

# stdout log filter enabled
stdout_filter_enabled = 1

# stdout log filter trace level
stdout_filter_loglevel = 2

# fileout log filter enabled
fileout_filter_enabled = 1

# fileout log filter trace level
fileout_filter_loglevel = 2

# Number of files around which to rotate logs
fileout_num_rotate_files = 10

# Maximum size of each log file
fileout_max_file_size = 20971520


################################################################################################
[application_3]
################################################################################################

# Name of the application
app_name = "sync_timing_esmc"

# Display trace level in the log msg
trace_level_in_log_msg = 1

# Display module name in the log msg
module_name_in_log_msg = 1

# Display timestamp in the log msg
timestamp_in_log_msg = 1

# Use Mini timestamp instead of a detailed timestamp in the log msg
use_mini_timestamp = 0

# Display function name and line number in the log msg
func_info_in_log_msg = 1

# Logfile name - When specified all fileout logs from the application, once registered with the logger, will go to this file
logfile = "synctimingdriver.log"

# Clear logfile at startup - when the application starts and registers with the core. 
# Set to 1 only if the application desires its own log file and wants it to be cleared at startup.
clear_logfile_startup = 0

# stdout log filter enabled
stdout_filter_enabled = 1

# stdout log filter trace level
stdout_filter_loglevel = 2

# fileout log filter enabledptp2    
fileout_filter_enabled = 1

# fileout log filter trace level
fileout_filter_loglevel = 2

# Number of files around which to rotate logs
fileout_num_rotate_files = 20

# Maximum size of each log file
fileout_max_file_size = 20971520

################################################################################################
[application_4]
################################################################################################

# Name of the application
app_name = "ptp2applib_tester"

# Display trace level in the log msg
trace_level_in_log_msg = 1

# Display module name in the log msg
module_name_in_log_msg = 1

# Display timestamp in the log msg
timestamp_in_log_msg = 1

# Use Mini timestamp instead of a detailed timestamp in the log msg
use_mini_timestamp = 0

# Display function name and line number in the log msg
func_info_in_log_msg = 1

# Logfile name - When specified all fileout logs from the application, once registered with the logger, will go to this file
logfile = "ptp2applib_tester.log"

# Clear logfile at startup - when the application starts and registers with the core. 
# Set to 1 only if the application desires its own log file and wants it to be cleared at startup.
clear_logfile_startup = 1

# stdout log filter enabled
stdout_filter_enabled = 1

# stdout log filter trace level
stdout_filter_loglevel = 2

# fileout log filter enabledptp2    
fileout_filter_enabled = 1

# fileout log filter trace level
fileout_filter_loglevel = 3

# Number of files around which to rotate logs
fileout_num_rotate_files = 20

# Maximum size of each log file
fileout_max_file_size = 20971520

################################################################################################
[application_5]
################################################################################################

# Name of the application
app_name = "sync_timing_ptp_test"

# Display trace level in the log msg
trace_level_in_log_msg = 1

# Display module name in the log msg
module_name_in_log_msg = 1

# Display timestamp in the log msg
timestamp_in_log_msg = 1

# Use Mini timestamp instead of a detailed timestamp in the log msg
use_mini_timestamp = 0

# Display function name and line number in the log msg
func_info_in_log_msg = 1

# Logfile name - When specified all fileout logs from the application, once registered with the logger, will go to this file
logfile = "sync_timing_ptp_test.log"

# Clear logfile at startup - when the application starts and registers with the core. 
# Set to 1 only if the application desires its own log file and wants it to be cleared at startup.
clear_logfile_startup = 1

# stdout log filter enabled
stdout_filter_enabled = 1

# stdout log filter trace level
stdout_filter_loglevel = 2

# fileout log filter enabledptp2
fileout_filter_enabled = 1

# fileout log filter trace level
fileout_filter_loglevel = 3

# Number of files around which to rotate logs
fileout_num_rotate_files = 20

# Maximum size of each log file
fileout_max_file_size = 20971520
