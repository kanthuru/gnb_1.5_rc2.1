/* SPDX-License-Identifier: GPL-2.0 */
/*******************************************************************************
  Copyright (c) 2020  EdgeQ Inc.
*******************************************************************************/

#ifndef __XGBE_XPCS_H__
#define __XGBE_XPCS_H__

/* ID of XPCS/XLGPCS are same, but the address to read ID are different. */
#define DW_XPCS_ID			0x7996ced0
#define DW_XLGPCS_25G_ID		0x7996ced0
#define DW_XLGPCS_50G_ID		0x7996ced0

#define DW_XPCS_LANE_OFFSET		0x40000
#define DW_E32_LANE_OFFSET		0x200
#define NUM_PCS_LANES			4
#define NUM_E32_LANES			4

/* XPCS registers offset. Memory remapped. */
/* PMA */
#define DW_XPCS_VR_PMA_DIG_CTRL1	0x00D0
#define DW_BYP_PWRUP			BIT(1)
#define DW_XPCS_VR_PMA_RX_LSTS		0x00E0
#define DW_XPCS_RX_VALID_0		BIT(12)
#define DW_XPCS_VR_PMA_MP_12G_16G_25G_TX_GENCTRL0	0x00E8
#define DW_XPCS_TX_RST_0		BIT(8)
#define DW_XPCS_VR_PMA_32G_TX_CM_CNTX_SEL0	0x0128
#define DW_XPCS_VR_PMA_32G_TX_CNTX_CTRL0	0x0130
#define DW_XPCS_VR_PMA_25G_TX_WIDTH_CTRL	0x0140
#define DW_TX0_WIDTH			GENMASK(2, 0)
#define DW_TX0_WIDTH_32BIT		0x4
#define DW_XPCS_VR_PMA_MP_12G_16G_25G_RX_GENCTRL0	0x0148
#define DW_XPCS_RX_TERM_EN_0		BIT(0)
#define DW_XPCS_RX_DT_EN_0		BIT(8)
#define DW_XPCS_VR_PMA_MP_12G_16G_25G_RX_GENCTRL1	0x0150
#define DW_XPCS_RX_RST_0		BIT(4)
#define DW_XPCS_VR_PMA_32G_RX_EQ_CTRL4	0x0180
#define DW_RX_AD_REQ			BIT(12)
#define DW_XPCS_VR_PMA_MP_12G_16G_25G_RX_STS	0x0190
#define DW_RX_ACK_0			BIT(0)
#define DW_XPCS_VR_PMA_32G_RX_CNTX_CTRL0	0x01D0
#define DW_XPCS_VR_PMA_32G_REF_CLK_CTRL1	0x01E0
#define DW_REF_CLK_A_B_SEL		0xD850
#define DW_XPCS_VR_PMA_32G_LN_LINK_CTRL	0x01E8
#define DW_XPCS_VR_PMA_12G_16G_25G_MISC_STS	0x01F0
#define DW_RX_ADPT_ACK			BIT(12)
#define DW_XPCS_VR_PMA_25G_RX_WIDTH_CTRL	0x0238
#define DW_RX0_WIDTH			GENMASK(2, 0)
#define DW_RX0_WIDTH_32BIT		0x4
/* PCS */
#define DW_XPCS_SR_PCS_CTRL1		0x0248
#define DW_CTRL1_RST			BIT(15)
#define DW_XPCS_SR_PCS_STS1		0x0250
#define DW_RX_LINK_UP			BIT(2)
#define DW_RX_STS1_FAULT		BIT(7)
#define DW_XPCS_SR_PCS_DEV_ID1		0x0258
#define DW_XPCS_SR_PCS_DEV_ID2		0x0260
#define DW_XPCS_SR_PCS_CTRL2		0x0280
#define DW_XPCS_TYPE_SEL		GENMASK(3, 0)
#define DW_XPCS_TYPE_10GBASE_R		0x0
#define DW_XPCS_TYPE_10GBASE_X		0x1
#define DW_XPCS_TYPE_2G5BASE_X		0xE
#define DW_XPCS_TYPE_5GBASE_R		0xF
#define DW_XPCS_SR_PCS_STS2		0x0288
#define DW_RX_STS2_FAULT		BIT(10)
#define DW_TX_STS2_FAULT		BIT(11)
#define DW_XPCS_SR_PCS_KR_STS1		0x02B8
#define DW_RPCS_BKLK			BIT(0)
#define DW_XPCS_SR_PCS_KR_STS2		0x02C0
#define DW_ERR_BLK			GENMASK(7, 0)
#define DW_XPCS_VR_PCS_DIG_CTRL1	0x0360
#define DW_BYP_PWRUP			BIT(1)
#define DW_EN_2_5G_MODE			BIT(2)
#define DW_DATAPATH_INIT		BIT(8)
#define DW_USXG_EN			BIT(9)
#define DW_USRA_RST			BIT(10)
#define DW_VR_EN_VSMMD1			BIT(13)
#define DW_VR_RST			BIT(15)
#define DW_XPCS_VR_PCS_DEBUG_CTRL	0x0380
#define DW_SUPRESS_LOS_DET		BIT(4)
#define DW_RX_DT_EN_CTL			BIT(6)
#define DW_XPCS_VR_PCS_KR_CTRL		0x0388
#define DW_USXG_MODE			GENMASK(12, 10);
#define DW_USXG_MODE_10G_SXGMII		(0x0 << 10)
#define DW_XPCS_VR_PCS_DIG_STS		0x0390
#define DW_RXFIFO_ERR			GENMASK(6, 5)
/* MII */
#define DW_XPCS_SR_MII_CTRL		0x0410
#define DW_USXGMII_FULL			BIT(8)
#define DW_USXGMII_SS			(BIT(13) | BIT(6) | BIT(5))
#define DW_USXGMII_10000		(BIT(13) | BIT(6))
#define DW_USXGMII_5000			(BIT(13) | BIT(5))
#define DW_USXGMII_2500			(BIT(5))
#define DW_USXGMII_1000			(BIT(6))
#define DW_SGMII_1000			(BIT(6))
#define DW_XPCS_VR_MII_AN_CTRL		0x0458
#define DW_PCS_MODE			GENMASK(2, 1);
#define DW_PCS_MODE_SGMII		(0x2 << 1)

/* XLGPCS 25G registers offset. Memory remapped. */
/* PCS */
#define DW_25G_SR_PCS_CTRL1		0x0000
#define DW_XLGPCS_SS_5_2		GENMASK(5, 2)
#define DW_XLGPCS_SS_10G		(0x0 << 2)
#define DW_XLGPCS_SS_25G		(0x5 << 2)
#define DW_XLGPCS_SS_50G		(0x6 << 2)
#define DW_25G_SR_PCS_STS1		0x0008
#define DW_25G_SR_PCS_DEV_ID1		0x0010
#define DW_25G_SR_PCS_DEV_ID2		0x0018
#define DW_25G_SR_PCS_CTRL2		0x0038
#define DW_XLGPCS_TYPE_SEL		GENMASK(3, 0)
#define DW_XLGPCS_TYPE_10GBASE_R	0x0
#define DW_XLGPCS_TYPE_25GBASE_R	0x7
#define DW_XLGPCS_TYPE_50GBASE_R	0x8
#define DW_25G_SR_PCS_STS2		0x0040
#define DW_25G_SR_PCS_BASER_STS1	0x0058
#define DW_25G_SR_PCS_BASER_STS2	0x0060
#define DW_25G_VR_PCS_DIG_CTRL1		0x0110
#define DW_25G_VR_PCS_DIG_CTRL3		0x0120
#define DW_CNS_EN			BIT(0)
#define DW_CNS_50G			BIT(1)
#define DW_MSK_PHY_RST			BIT(8)
#define DW_BMX_544			BIT(9)
#define DW_25G_VR_PCS_DIG_STS		0x0138
#define DW_25G_VR_PCS_AM_CNT		0x0140
#define DW_VR_PCS_AM_CNT		GENMASK(13, 0)
#define DW_VR_PCS_AM_CNT_25G_50G	1024
/* PMA */
#define DW_25G_SR_PMA_CTRL2		0x0180
#define DW_XLGPCS_PMA_TYPE		GENMASK(6, 0)
#define DW_XLGPCS_PMA_TYPE_10GBASE_KR	0x0B
#define DW_XLGPCS_PMA_TYPE_25GBASE_KR	0x39
#define DW_XLGPCS_PMA_TYPE_50GBASE_KR	0x40
#define DW_25G_SR_PMA_KR_FEC_CTRL	0x01D0
#define DW_FEC_EN			BIT(0)
#define DW_25G_SR_PMA_RS_FEC_CTRL	0x01F8
#define DW_RSFEC_EN			BIT(2)
#define DW_FLP_25G_X_2			BIT(3)	// 0 for 50G_X_1
#define DW_25G_VR_PMA_MP_TX_GENCTRL0	0x0288
#define DW_25G_VR_PMA_25G_16G_RX_EQ_CTRL4	0x02F8
#define DW_RX0_AD_REQ			BIT(12)
#define DW_25G_VR_PMA_MP_RX_GENCTRL1	0x02E0
#define DW_25G_VR_PMA_32G_MISC_STS0	0x0380
#define DW_RX0_AD_ACK			BIT(4)
#define DW_25G_VR_PMA_32G_LN_LINK_CTRL	0x0408
/* PMA */

/* XLGPCS 50G registers offset. Memory remapped. */
/* PCS */
#define DW_50G_SR_PCS_CTRL1		0x01C0
#define DW_50G_SR_PCS_STS1		0x01C8
#define DW_50G_SR_PCS_DEV_ID1		0x01D0
#define DW_50G_SR_PCS_DEV_ID2		0x01D8
#define DW_50G_SR_PCS_CTRL2		0x01F8
#define DW_50G_SR_PCS_STS2		0x0200
#define DW_50G_SR_PCS_BASER_STS1	0x0218
#define DW_50G_SR_PCS_BASER_STS2	0x0220
#define DW_50G_VR_PCS_DIG_CTRL1		0x0420
#define DW_TX_INIT			BIT(8)
#define DW_RX_INIT			BIT(9)
#define DW_EN_VSMMD1			BIT(13)
#define DW_50G_VR_PCS_DIG_CTRL3		0x0430
#define DW_50G_VR_PCS_DIG_STS		0x0448
#define DW_50G_VR_PCS_AM_CNT		0x0458
#define DW_PCS_AM_CNT_50G		0x400
/* PMA */
#define DW_50G_SR_PMA_CTRL1		0x0000
#define DW_PMA_SS_5_2			GENMASK(5, 2)
#define DW_PMA_SS_10G			(0x0 << 2)
#define DW_PMA_SS_25G			(0x4 << 2)
#define DW_PMA_SS_50G			(0x5 << 2)
#define DW_50G_SR_PMA_CTRL2		0x0038
#define DW_50G_SR_PMA_RS_FEC_CTRL	0x0080
#define DW_50G_SR_PMA_CTRL3		0x01B0
#define DW_AM_CNTX40_MOD66_50G		0xE
#define DW_50G_SR_PMA_CTRL4		0x01B8
#define DW_AM_CNTX40_DIV66_50G		0x4DA

struct xpcs_ops {
	int (*probe)(struct dw_eth_dev *priv);
	int (*config)(struct dw_eth_dev *priv);
	int (*get_state)(struct dw_eth_dev *priv, int *link);
	int (*update_speed)(struct dw_eth_dev *priv, int speed);
};

struct xpcs_ops *xpcs_get_ops(struct dw_eth_dev *priv);

/* E32 indirect programming register offset. */
/* For XPCS */
#define DW_XPCS_VR_PMA_12G_16G_25G_SRAM	0x0200
#define DW_INIT_DN			BIT(0)
#define DW_EXT_LD_DN			BIT(1)
#define DW_BTLD_BYP			BIT(2)
#define DW_XPCS_VR_PMA_SNPS_CR_CTRL	0x0220
#define DW_START_BUSY			BIT(0)
#define DW_WR_RDN			BIT(1)
#define DW_XPCS_VR_PMA_SNPS_CR_ADDR	0x0228
#define DW_XPCS_VR_PMA_SNPS_CR_DATA	0x0230
/* For 25G XLGPCS */
#define DW_25G_VR_PMA_25G_16G_SRAM	0x0368
#define DW_INIT_DN			BIT(0)
#define DW_EXT_LD_DN			BIT(1)
#define DW_25G_VR_PMA_25G_16G_CR_CTRL	0x0390
#define DW_START_BUSY			BIT(0)
#define DW_WR_RDN			BIT(1)
#define DW_25G_VR_PMA_25G_16G_CR_ADDR	0x0398
#define DW_25G_VR_PMA_25G_16G_CR_DATA	0x03A0

/* E32 registers */
#define DIG_TX_LBERT_CTL		0x1071
#define BERT_MODE_DISABLE		0x0
#define BERT_MODE_LFSR31		0x1
#define DIG_RX_LBERT_CTL		0x1093
#define BERT_SYNC			BIT(4)
#define BERT_ERR_CNT_CLR_N		BIT(10)
#define DIG_RX_LBERT_ERR		0x1094
#define DIG_PCS_XF_LANE_OVRD_BCAST	0x6028
#define RX2TX_LB_EN			BIT(0)
#define RX2TX_LB_EN_OVRD		BIT(1)
#define TX2RX_LB_EN			BIT(2)
#define TX2RX_LB_EN_OVRD		BIT(3)

/* E56 serdes register offset. */
/* RXS */
#define DW_E56_RXS_CFG0			0x0000
#define DW_E56_RXS_SIGNAL_TYPE		BIT(2)
#define DW_E56_DSER_DATA_SEL		BIT(1) // 0: even samples
#define DW_E56_TRAIN_CLK_GATE_BYPASS	GENMASK(17, 4)
#define DW_E56_TRAIN_CLK_GATE_BYP_1FFF	(0x1FFF << 4)
#define DW_E56_OSC_CAL_N_CDR0		0x0004
#define DW_E56_PREDIV0			GENMASK(15, 0)
#define DW_E56_PREDIV0_FA0		(0xFA0 << 0)
#define DW_E56_TARGET_CNT0		GENMASK(31, 16)
#define DW_E56_TARGET_CNT0_203A		(0x203A << 16)
#define DW_E56_OSC_CAL_N_CDR1		0x0008
#define DW_E56_PREDIV1			GENMASK(15, 0)
#define DW_E56_PREDIV1_700		(0x700 << 0)
#define DW_E56_TARGET_CNT1		GENMASK(31, 16)
#define DW_E56_TARGET_CNT1_2418		(0x2418 << 16)
#define DW_E56_OSC_CAL_N_CDR2		0x000C
#define DW_E56_PREDIV2			GENMASK(15, 0)
#define DW_E56_PREDIV2_700		(0x700 << 0)
#define DW_E56_TARGET_CNT2		GENMASK(31, 16)
#define DW_E56_TARGET_CNT2_2530		(0x2530 << 16)
#define DW_E56_OSC_CAL_N_CDR4		0x0014
#define DW_E56_OSC_RANGE_SEL0		GENMASK(1, 0)
#define DW_E56_OSC_SEL0_25_DOT_78G	(0x1 << 0)
#define DW_E56_OSC_SEL0_20G		(0x2 << 0)
#define DW_E56_OSC_RANGE_SEL1		GENMASK(3, 2)
#define DW_E56_OSC_SEL1_25_DOT_78G	(0x1 << 2)
#define DW_E56_OSC_RANGE_SEL2		GENMASK(5, 4)
#define DW_E56_OSC_SEL2_26_DOT_56G	(0x0 << 4)
#define DW_E56_OSC_SEL2_25_DOT_78G	(0x1 << 4)
#define DW_E56_VCO_CODE_INIT		GENMASK(18, 8)
#define DW_E56_VCO_CODE_7FB		(0x7FB << 8)
#define DW_E56_VCO_CODE_7FF		(0x7FF << 8)
#define DW_E56_OSC_CURRENT_BOOST_EN0	BIT(20)
#define DW_E56_OSC_CURRENT_BOOST_EN1	BIT(21)
#define DW_E56_OSC_CURRENT_BOOST_EN2	BIT(22)
#define DW_E56_BBCDR_CURRENT_BOOST0	GENMASK(25, 24)
#define DW_E56_BBCDR_CURRENT_BOOST1	GENMASK(27, 26)
#define DW_E56_BBCDR_CURRENT_BOOST2	GENMASK(29, 28)
#define DW_E56_OSC_CAL_N_CDR5		0x0018
#define DW_E56_CDR_LOCK_MODE_BITS	GENMASK(9, 8)
#define DW_E56_CDR_LOCK_MODE_VAL	(0x1 << 8)
#define DW_E56_SDM_WIDTH		GENMASK(3, 2)
#define DW_E56_SDM_WIDTH_5BITS		(0x3 << 2)
#define DW_E56_BBCDR_PROP_STEP_PRELOCK	GENMASK(15, 12)
#define DW_E56_CDR_PROP_PRELOCK_450MHZ	(0xF << 12)
#define DW_E56_BBCDR_PROP_STEP_POSTLOCK	GENMASK(19, 16)
#define DW_E56_CDR_PROP_POSTLOCK_90MHZ	(0x3 << 16)
#define DW_E56_CDR_PROP_POSTLOCK_MAX	(0xF << 16)
#define DW_E56_BBCDR_GAIN_CTRL_POSTLOCK	GENMASK(23, 20)
#define DW_E56_CDR_GAIN_POSTLOCK_13BIT	(0x7 << 20)
#define DW_E56_CDR_GAIN_POSTLOCK_10BIT	(0xA << 20)
#define DW_E56_CDR_GAIN_POSTLOCK_7BIT	(0xC << 20)
#define DW_E56_BBCDR_GAIN_CTRL_PRELOCK	GENMASK(27, 24)
#define DW_E56_CDR_GAIN_PRELOCK_8BIT	(0xC << 24)
#define DW_E56_CDR_GAIN_PRELOCK_7BIT	(0xF << 24)
#define DW_E56_BBCDR_RDY_CNT		GENMASK(30, 28)
#define DW_E56_CDR_RDY_CNT_64K		(0x3 << 28)
#define DW_E56_OSC_CAL_N_CDR6		0x001C
#define DW_E56_PI_GAIN_CTRL_PRELOCK	GENMASK(3, 0)
#define DW_E56_PI_GAIN_PRELOCK_6BIT	(0x7 << 0)
#define DW_E56_PI_GAIN_CTRL_POSTLOCK	GENMASK(7, 4)
#define DW_E56_PI_GAIN_POSTLOCK_12BIT	(0x1 << 4)
#define DW_E56_PI_GAIN_POSTLOCK_11BIT	(0x2 << 4)
#define DW_E56_PI_GAIN_POSTLOCK_8BIT	(0x5 << 4)
#define DW_E56_INTL_CONFIG0		0x0020
#define DW_E56_ADC_INTL2SLICE_DELAY0	GENMASK(15, 0)
#define DW_E56_ADC_DELAY0_5555		(0x5555 << 0)
#define DW_E56_ADC_INTL2SLICE_DELAY1	GENMASK(31, 16)
#define DW_E56_ADC_DELAY1_3333		(0x3333 << 16)
#define DW_E56_INTL_CONFIG1		0x0024
#define DW_E56_ADC_INTL2SLICE_DELAY2	GENMASK(15, 0)
#define DW_E56_ADC_DELAY2_DDDD		(0xDDDD << 0)
#define DW_E56_INTL_CONFIG2		0x0028
#define DW_E56_INTL_HBW_DISABLED0	BIT(0)
#define DW_E56_INTL_HBW_DISABLED1	BIT(1)
#define DW_E56_INTL_HBW_DISABLED2	BIT(2)
#define DW_E56_TXFFE_TRAINING0		0x002C
#define DW_E56_ADC_DATA_PEAK_LTH	GENMASK(18, 12)
#define DW_E56_ADC_DATA_PEAK_LTH_56	(0x56 << 12)
#define DW_E56_ADC_DATA_PEAK_UTH	GENMASK(26, 20)
#define DW_E56_ADC_DATA_PEAK_UTH_6A	(0x6A << 20)
#define DW_E56_ADC_DATA_PEAK_UTH_70	(0x70 << 20)
#define DW_E56_TXFFE_TRAINING1		0x0030
#define DW_E56_C1_LTH			GENMASK(8, 0)
#define DW_E56_C1_LTH_1E8		(0x1E8 << 0)
#define DW_E56_C1_LTH_1F8		(0x1F8 << 0)
#define DW_E56_C1_UTH			GENMASK(20, 12)
#define DW_E56_C1_UTH_78		(0x78 << 12)
#define DW_E56_C1_UTH_F0		(0xF0 << 12)
#define DW_E56_TXFFE_TRAINING2		0x0034
#define DW_E56_CM1_LTH			GENMASK(8, 0)
#define DW_E56_CM1_LTH_100		(0x100 << 0)
#define DW_E56_CM1_UTH			GENMASK(20, 12)
#define DW_E56_CM1_UTH_FF		(0xFF << 12)
#define DW_E56_TXFFE_TRAINING3		0x0038
#define DW_E56_CM2_LTH			GENMASK(8, 0)
#define DW_E56_CM2_LTH_4		(0x4 << 0)
#define DW_E56_CM2_UTH			GENMASK(20, 12)
#define DW_E56_CM2_UTH_37		(0x37 << 12)
#define DW_E56_TXFFE_TRAIN_MODE_TYPE	GENMASK(26, 21)
#define DW_E56_TRAIN_MODE_TYPE_38	(0x38 << 21)
#define DW_E56_VGA_TRAINING0		0x004C
#define DW_E56_VGA_TARGET		GENMASK(18, 12)
#define DW_E56_VGA_TARGET_34		(0x34 << 12)
#define DW_E56_VGA_TRAINING1		0x0050
#define DW_E56_VGA1_CODE_INIT0		GENMASK(4, 0)
#define DW_E56_VGA1_CODE_INIT0_A	(0xA << 0)
#define DW_E56_VGA2_CODE_INIT0		GENMASK(12, 8)
#define DW_E56_VGA2_CODE_INIT0_A	(0xA << 8)
#define DW_E56_VGA1_CODE_INIT123	GENMASK(20, 16)
#define DW_E56_VGA1_CODE_INIT123_A	(0xA << 16)
#define DW_E56_VGA2_CODE_INIT123	GENMASK(28, 24)
#define DW_E56_VGA2_CODE_INIT123_A	(0xA << 24)
#define DW_E56_CTLE_TRAINING0		0x0054
#define DW_E56_CTLE_CODE_INIT0		GENMASK(24, 20)
#define DW_E56_CTLE_CODE_INIT0_9	(0x9 << 20)
#define DW_E56_CTLE_CODE_INIT123	GENMASK(31, 27)
#define DW_E56_CTLE_CODE_INIT123_9	(0x9 << 27)
#define DW_E56_CTLE_TRAINING1		0x0058
#define DW_E56_CTLE_LFEQ_LUT		GENMASK(24, 0)
#define DW_E56_CTLE_LFEQ_LUT_VAL	(0x1FFFFE0 << 0)
#define DW_E56_CTLE_LFEQ_LUT_VAL2	(0x1FFFFEA << 0)
#define DW_E56_CTLE_TRAINING2		0x005C
#define DW_E56_ISI_TH_FRAC_P1		GENMASK(5, 0)
#define DW_E56_ISI_TH_FRAC_P1_18	(0x18 << 0)
#define DW_E56_ISI_TH_FRAC_P2		GENMASK(13, 8)
#define DW_E56_ISI_TH_FRAC_P3		GENMASK(21, 16)
#define DW_E56_CTLE_TRAINING3		0x0060
#define DW_E56_TAP_WEIGHT_P1		GENMASK(9, 8)
#define DW_E56_TAP_WEIGHT_P1_1		(0x1 << 8)
#define DW_E56_TAP_WEIGHT_P2		GENMASK(11, 10)
#define DW_E56_TAP_WEIGHT_P3		GENMASK(13, 12)
#define DW_E56_OFFSET_N_GAIN_CAL0	0x0064
#define DW_E56_ADC_SLICE_DATA_AVG_CNT	GENMASK(5, 4)
#define DW_E56_ADC_SLICE_DATA_AVG_16K	(0x3 << 4)
#define DW_E56_ADC_DATA_AVG_CNT		GENMASK(9, 8)
#define DW_E56_ADC_DATA_AVG_16K		(0x3 << 8)
#define DW_E56_FE_OFFSET_DAC_CLK_CNT	GENMASK(31, 28)
#define DW_E56_FE_OFFSET_DAC_CLK_CNT_C	(0xC << 28)
#define DW_E56_OFFSET_N_GAIN_CAL1	0x0068
#define DW_E56_SAMP_ADAPT_CFG		GENMASK(31, 28)
#define DW_E56_SAMP_ADAPT_CFG_5		(0x5 << 28)
#define DW_E56_FFE_TRAINING0		0x0070
#define DW_E56_FFE_TAP_EN		GENMASK(23, 8)
#define DW_E56_FFE_TAP_EN_F9FF		(0xF9FF << 8)
#define DW_E56_IDLE_DETECT1		0x0088
#define DW_E56_IDLE_TH_ADC_PEAK_MAX	GENMASK(22, 16)
#define DW_E56_IDLE_TH_ADC_PEAK_MAX_A	(0xA << 16)
#define DW_E56_IDLE_TH_ADC_PEAK_MIN	GENMASK(30, 24)
#define DW_E56_IDLE_TH_ADC_PEAK_MIN_5	(0x5 << 24)
#define DW_E56_RXS_ANA_OVRDEN0		0x008C
#define DW_E56_OVRD_EN_ANA_EN_RTERM	BIT(0)
#define DW_E56_OVRD_EN_ANA_BBCDR_OSC_RANGE_SEL	BIT(29)
#define DW_E56_RXS_ANA_OVRDEN1		0x0090
#define DW_E56_OVRD_EN_ANA_BBCRD	BIT(0)
#define DW_E56_OVRD_EN_ANA_BBCRD_COARSE	BIT(1)
#define DW_E56_OVRD_EN_ANA_BBCRD_FINE	BIT(2)
#define DW_E56_OVRD_EN_ANA_BBCRD_UFINE	BIT(3)
#define DW_E56_OVRD_EN_ANA_TEST_BBCRD	BIT(9)
#define DW_E56_RXS_ANA_OVRDEN3		0x0098
#define DW_E56_OVRD_EN_ANA_ANABS_CONFIG	BIT(15)
#define DW_E56_OVRD_EN_ANA_VGA2_BOOST_CSTM	BIT(25)
#define DW_E56_RXS_ANA_OVRDEN4		0x009C
#define DW_E56_OVRD_EN_ANA_SPARE_BIT13	BIT(13)
#define DW_E56_RXS_ANA_OVRDVAL0		0x00A0
#define DW_E56_ANA_EN_RTERM		BIT(0)
#define DW_E56_RXS_ANA_OVRDVAL5		0x00B4
#define DW_E56_ANA_BBCDR_OSC_RANGE_SEL	GENMASK(1, 0)
#define DW_E56_ANA_BBCDR_OSC_RANGE_SEL0	(0x0 << 0)
#define DW_E56_ANA_BBCDR_OSC_RANGE_SEL1	(0x1 << 0)
#define DW_E56_ANA_BBCDR_OSC_RANGE_SEL3	(0x3 << 0)
#define DW_E56_ANA_BBCDR_OSC_RANGE_HSEL_50G	(0x1 << 0)
#define DW_E56_ANA_BBCDR_OSC_RANGE_HSEL_25G	(0x1 << 0)
#define DW_E56_ANA_BBCDR_OSC_RANGE_HSEL_10G	(0x3 << 0)
#define DW_E56_ANA_BBCDR_OSC_RANGE_LSEL_50G	(0x0 << 0)
#define DW_E56_ANA_BBCDR_OSC_RANGE_LSEL_25G	(0x0 << 0)
#define DW_E56_ANA_BBCDR_OSC_RANGE_LSEL_10G	(0x2 << 0)
#define DW_E56_ANA_BBCDR_COARSE		GENMASK(7, 4)
#define DW_E56_ANA_BBCDR_COARSE_SHIFT	4
#define DW_E56_ANA_BBCDR_COARSE_MAX	(0xF << 4)
#define DW_E56_ANA_BBCDR_COARSE_MIN_50G	(0x0 << 4)
#define DW_E56_ANA_BBCDR_COARSE_MIN_25G	(0x1 << 4)
#define DW_E56_ANA_BBCDR_COARSE_MIN_10G	(0x1 << 4)
#define DW_E56_ANA_BBCDR_FINE		GENMASK(10, 8)
#define DW_E56_ANA_BBCDR_FINE_SHIFT	8
#define DW_E56_ANA_BBCDR_FINE_MAX	(0x7 << 8)
#define DW_E56_ANA_BBCDR_FINE_FMAX_WRAP_50G	(1 << 8)
#define DW_E56_ANA_BBCDR_FINE_FMAX_WRAP_25G	(2 << 8)
#define DW_E56_ANA_BBCDR_FINE_FMAX_WRAP_10G	(1 << 8)
#define DW_E56_ANA_BBCDR_FINE_MIN	(0x0 << 8)
#define DW_E56_ANA_BBCDR_FINE_FMIN_WRAP_50G	(6 << 8)
#define DW_E56_ANA_BBCDR_FINE_FMIN_WRAP_25G	(5 << 8)
#define DW_E56_ANA_BBCDR_FINE_FMIN_WRAP_10G	(5 << 8)
#define DW_E56_ANA_BBCDR_UFINE		GENMASK(14, 12)
#define DW_E56_ANA_BBCDR_UFINE_SHIFT	12
#define DW_E56_ANA_BBCDR_UFINE_MAX_50G	(0x3 << 12)
#define DW_E56_ANA_BBCDR_UFINE_MAX_25G	(0x2 << 12)
#define DW_E56_ANA_BBCDR_UFINE_MAX_10G	(0x7 << 12)
#define DW_E56_ANA_BBCDR_UFINE_UMAX_WRAP_50G	(0 << 12)
#define DW_E56_ANA_BBCDR_UFINE_UMAX_WRAP_25G	(0 << 12)
#define DW_E56_ANA_BBCDR_UFINE_UMAX_WRAP_10G	(6 << 12)
#define DW_E56_ANA_BBCDR_UFINE_FMAX_WRAP_50G	(1 << 12)
#define DW_E56_ANA_BBCDR_UFINE_FMAX_WRAP_25G	(0 << 12)
#define DW_E56_ANA_BBCDR_UFINE_FMAX_WRAP_10G	(7 << 12)
#define DW_E56_ANA_BBCDR_UFINE_MIN	(0x0 << 12)
#define DW_E56_ANA_BBCDR_UFINE_UMIN_WRAP_50G	(3 << 12)
#define DW_E56_ANA_BBCDR_UFINE_UMIN_WRAP_25G	(2 << 12)
#define DW_E56_ANA_BBCDR_UFINE_UMIN_WRAP_10G	(2 << 12)
#define DW_E56_ANA_BBCDR_UFINE_FMIN_WRAP	(2 << 12)
#define DW_E56_ANA_BBCDR_INT_CSTM	GENMASK(24, 20)
#define DW_E56_ANA_BBCDR_INT_CSTM_SEC_LOW_TH	(0x1A << 20)
#define DW_E56_ANA_BBCDR_INT_CSTM_SEC_HIGH_TH	(0x1D << 20)
#define DW_E56_ANA_BBCDR_INT_CSTM_1F	(0x1F << 20)
#define DW_E56_RXS_ANA_OVRDVAL6		0x00B8
#define DW_E56_ANA_TEST_BBCDR_BIT_2_0	GENMASK(2, 0)
#define DW_E56_ANA_TEST_BBCDR_6		0x6
#define DW_E56_ANA_TEST_BBCDR_BIT_3	BIT(3)
#define DW_E56_ANA_TEST_BBCDR_BIT_4	BIT(4)
#define DW_E56_ANA_TEST_BBCDR_BIT_13	BIT(13)
#define DW_E56_ANA_TEST_BBCDR_BIT_14	BIT(14)
#define DW_E56_RXS_ANA_OVRDVAL14	0x00D8
#define DW_E56_ANA_SPARE_BIT13		BIT(13)
#define DW_E56_RXS_ANA_OVRDVAL15	0x00DC
#define DW_E56_ANA_ANABS_CONFIG		GENMASK(2, 0)
#define DW_E56_ANA_ANABS_CONFIG_1	(0x1 << 0)
#define DW_E56_ANA_ANABS_CONFIG_7	(0x7 << 0)
#define DW_E56_ANA_OVRDVAL17		0x00E4
#define DW_E56_ANA_VGA2_BOOST_CSTM	GENMASK(18, 16)
#define DW_E56_RXS_DFT1			0x00EC
#define DW_E56_RXS_BER_EN		BIT(0)
#define DW_E56_RXS_BER_READ_MODE_EN	BIT(4)
#define DW_E56_RXS_PATTERN_SEL		GENMASK(19, 16)
#define DW_E56_RXS_PATTERN_PRBS31	(0x6 << 16)
#define DW_E56_RXS_DFT3			0x00F4
#define DW_E56_EYE_SCAN_TIMER		0x01A4
#define DW_E56_EYE_SCAN_TIMER_400	0x400
#define DW_E56_RXS_RINGO0		0x01FC
#define DW_E56_RINGO0_SPARE0		BIT(12)
#define DW_E56_RINGO0_SPARE1		BIT(13)
#define DW_E56_RINGO0_SPARE2		BIT(14)
#define DW_E56_RINGO0_SPARE3		BIT(15)
#define DW_E56_RINGO0_SPARE4_TO_9	GENMASK(21, 16)
#define DW_E56_RINGO0_SPARE4_TO_9_36	(0x36 << 16)
#define DW_E56_RINGO0_SPARE4_TO_9_38	(0x38 << 16)
/* TXS */
#define DW_E56_TXS_CFG0			0x0800
#define DW_E56_TXS_SIGNAL_TYPE		BIT(2)
#define DW_E56_TXS_CFG1			0x0804
#define DW_E56_ADAPTATION_WAIT_CNT	GENMASK(7, 4)
#define DW_E56_ADAPTATION_WAIT_CNT_F	(0xF << 4)
#define DW_E56_TXS_WKUP_CNT		0x0808
#define DW_E56_LDO_WKUP_CNT		GENMASK(7, 0)
#define DW_E56_LDO_WKUP_CNT_FF		(0xFF << 0)
#define DW_E56_DCC_WKUP_CNT		GENMASK(15, 8)
#define DW_E56_DCC_WKUP_CNT_FF		(0xFF << 8)
#define DW_E56_TXS_PIN_OVRDEN0		0x080C
#define DW_E56_OVRD_EN_TX0_EFUSE_BITS	BIT(28)
#define DW_E56_TXS_PIN_OVRDVAL6		0x082C
#define DW_E56_INT_TX0_EFUSE_BITS_15_12	GENMASK(31, 28)
#define DW_E56_INT_TX0_EFUSE_PAM4	(0x5 << 28)
#define DW_E56_INT_TX0_EFUSE_BITS_11_8	GENMASK(27, 24)
#define DW_E56_INT_TX0_EFUSE_NRZ	(0x5 << 24)
#define DW_E56_INT_TX0_EFUSE_BITS_3_0	GENMASK(19, 16)
#define DW_E56_INT_TX0_EFUSE_10G	(0x6 << 16)
#define DW_E56_TXS_TST_CFG0		0x0830
#define DW_E56_TXS_PATTERN_EN		BIT(0)
#define DW_E56_TXS_PATTERN_SEL		GENMASK(7, 4)
#define DW_E56_TXS_PATTERN_PRBS31	(0x6 << 4)

#define DW_E56_TXS_ANA_OVRDEN0		0x0844
#define DW_E56_OVRD_EN_ANA_TEST_DAC	BIT(13)
#define DW_E56_TXS_ANA_OVRDVAL1		0x0854
#define DW_E56_ANA_TEST_DAC		GENMASK(23, 8)
#define DW_E56_ANA_TEST_DAC_1		(0x1 << 8)
/* CMS */
#define DW_E56_PLL0_CFG0		0x0C10
#define DW_E56_PLL0_REFCLK_SEL		GENMASK(25, 24)
#define DW_E56_PLL0_REFCLK_FROM_PAD	(0x1 << 24)
#define DW_E56_PLL0_REFCLK_FROM_INT	(0x3 << 24)
#define DW_E56_CLK_TX_TL_EN		BIT(16)
#define DW_E56_CLK_TX_TR_EN		BIT(17)
#define DW_E56_PLL0_CFG2		0x0C18
#define DW_E56_PLL0_POSTDIV		GENMASK(12, 8)
#define DW_E56_PLL0_POSTDIV_4		(0x4 << 8)
#define DW_E56_PLL0_DIV_CFG0		0x0C1C
#define DW_E56_PLL0_PREDIV		GENMASK(4, 0)
#define DW_E56_PLL0_PREDIV_8		(0x8 << 0)
#define DW_E56_PLL0_FBDIV_INT		GENMASK(18, 8)
#define DW_E56_PLL0_FBDIV_INT_294	(0x294 << 8)
#define DW_E56_PLL0_FBDIV_INT_2A8	(0x2A8 << 8)
#define DW_E56_PLL0_DIV_SPARE		BIT(25)
#define DW_E56_PLL1_CFG0		0x0C48
#define DW_E56_PLL1_REFCLK_SEL		GENMASK(25, 24)
#define DW_E56_PLL1_REFCLK_FROM_PAD	(0x1 << 24)
#define DW_E56_PLL1_REFCLK_FROM_INT	(0x3 << 24)
#define DW_E56_PLL1_CFG2		0x0C50
#define DW_E56_PLL1_POSTDIV		GENMASK(12, 8)
#define DW_E56_PLL1_POSTDIV_8		(0x8 << 8)
#define DW_E56_PLL1_POSTDIV_A		(0xA << 8)
#define DW_E56_PLL1_DIV_CFG0		0x0C54
#define DW_E56_PLL1_PREDIV		GENMASK(4, 0)
#define DW_E56_PLL1_PREDIV_8		(0x8 << 0)
#define DW_E56_PLL1_FBDIV_INT		GENMASK(18, 8)
#define DW_E56_PLL1_FBDIV_INT_108	(0x108 << 8)
#define DW_E56_PIN_OVRDEN0		0x0C8C
#define DW_E56_OVRD_EN_PLL0_TX_SIG_TYPE	BIT(12)
#define DW_E56_PIN_OVRDVAL0		0x0C94
#define DW_E56_INT_PLL0_TX_SIG_TYPE	BIT(10)
#define DW_E56_ANA_OVRDEN0		0x0CA4
#define DW_E56_OVRD_EN_ANA_REFCLK	BIT(1)
#define DW_E56_OVRD_EN_ANA_LCPLL_HF_CALIB	BIT(25)
#define DW_E56_OVRD_EN_ANA_LCPLL_HF_VCO	BIT(29)
#define DW_E56_ANA_OVRDEN1		0x0CA8
#define DW_E56_OVRD_EN_ANA_LCPLL_HF_TST	BIT(4)
#define DW_E56_OVRD_EN_ANA_LCPLL_LF_CALIB	BIT(12)
#define DW_E56_OVRD_EN_ANA_LCPLL_LF_VCO_CTRL	BIT(16)
#define DW_E56_OVRD_EN_ANA_LCPLL_LF_TST	BIT(23)
#define DW_E56_OVRD_EN_ANA_TEST_SLICER	BIT(30)
#define DW_E56_ANA_OVRDVAL0		0x0CB0
#define DW_E56_ANA_REFCLK_BUF_PAD_EN	BIT(1)
#define DW_E56_ANA_OVRDVAL2		0x0CB8
#define DW_E56_ANA_LCPLL_HF_CALIB	GENMASK(20, 16)
#define DW_E56_ANA_LCPLL_HF_CALIB_1	(0x1 << 16)
#define DW_E56_ANA_LCPLL_HF_CALIB_3	(0x3 << 16)
#define DW_E56_ANA_LCPLL_HF_VCO		GENMASK(31, 28)
#define DW_E56_ANA_LCPLL_HF_VCO_F	(0xF << 28)
#define DW_E56_ANA_OVRDVAL4		0x0CC0
#define DW_E56_ANA_LCPLL_HF_TEST	GENMASK(23, 0)
#define DW_E56_ANA_LCPLL_HF_TEST_VAL	0x260000
#define DW_E56_ANA_LCPLL_HF_BIT24	BIT(24)
#define DW_E56_ANA_LCPLL_HF_BIT31_29	GENMASK(31, 29)
#define DW_E56_ANA_LCPLL_HF_BIT31_29_4	(0x4 << 29)
#define DW_E56_ANA_OVRDVAL5		0x0CC4
#define DW_E56_ANA_LCPLL_HF_BIT33_32	GENMASK(1, 0)
#define DW_E56_ANA_TEST_SLICER		BIT(24)
#define DW_E56_ANA_OVRDVAL7		0x0CCC
#define DW_E56_ANA_LCPLL_LF_VCO_CTRL	GENMASK(3, 0)
#define DW_E56_ANA_LCPLL_LF_VCO_CTRL_F	(0xF << 0)
#define DW_E56_ANA_LCPLL_LF_CALIB	GENMASK(8, 4)
#define DW_E56_ANA_LCPLL_LF_CALIB_1	(0x1 << 4)
#define DW_E56_ANA_LCPLL_LF_CALIB_3	(0x3 << 4)
#define DW_E56_ANA_OVRDVAL9		0x0CD4
#define DW_E56_ANA_LCPLL_LF_TEST	GENMASK(23, 0)
#define DW_E56_ANA_LCPLL_LF_TEST_VAL	0x260000
#define DW_E56_ANA_LCPLL_LF_BIT24	BIT(24)
#define DW_E56_ANA_LCPLL_LF_BIT31_29	GENMASK(31, 29)
#define DW_E56_ANA_LCPLL_LF_BIT31_29_4	(0x4 << 29)
#define DW_E56_ANA_OVRDVAL10		0x0CD8
#define DW_E56_ANA_LCPLL_LF_BIT33_32	GENMASK(1, 0)
/* PMD */
#define DW_E56_PMD_CFG0			0x1400
#define DW_E56_PMD_CFG0_MASK		0x0F3FF133
#define DW_E56_PMD_CFG0_DEFAULT		0x0F3FF100
#define DW_E56_PMD_SOFT_RESET		BIT(0)
#define DW_E56_PMD_EN			BIT(1)
#define DW_E56_PLL_REFCLK_SEL		GENMASK(5, 4)
#define DW_E56_PLL_REF_CLK_EXT		(0x0 << 4)
#define DW_E56_PLL_REF_CLK_INT		(0x3 << 4)
#define DW_E56_PMD_MODE			BIT(8)	// 0 for ETHML
#define DW_E56_TX_EN_CFG		GENMASK(15, 12)
#define DW_E56_TX_EN_LANE0		(0x1 << 12)
#define DW_E56_RX_EN_CFG		GENMASK(19, 16)
#define DW_E56_RX_EN_LANE0		(0x1 << 16)
#define DW_E56_PLL_EN_CFG		GENMASK(21, 20)
#define DW_E56_PLL_EN_PLL0		BIT(20)
#define DW_E56_PLL_EN_PLL1		BIT(21)
#define DW_E56_PAM4_PRECODE_NO_KRT_EN	GENMASK(27, 24) // 0 for PAM4
#define DW_E56_PMD_CFG3			0x140C
#define DW_E56_CTRL_FSM_TIMEOUT		GENMASK(31, 24)
#define DW_E56_CTRL_FSM_TIMEOUT_80	(0x80 << 24)
#define DW_E56_PMD_CFG4			0x1410
#define DW_E56_TRAIN_DC_ON_PERIOD	GENMASK(7, 0)
#define DW_E56_TRAIN_DC_ON_PERIOD_18	(0x18 << 0)
#define DW_E56_TRAIN_DC_PERIOD		GENMASK(15, 8)
#define DW_E56_TRAIN_DC_PERIOD_3E	(0x3E << 8)
#define DW_E56_PMD_CFG5			0x1414
#define DW_E56_RX_TO_TX_LOOPBACK	BIT(0)
#define DW_E56_USE_RECENT_MARKER_OFFSET	BIT(12)
#define DW_E56_DATAPATH_CFG0		0x142C
#define DW_E56_DATAPATH_CFG0_10G	0x55555500
#define DW_E56_DATAPATH_CFG0_25G	0x75334500
#define DW_E56_DATAPATH_CFG0_50G	0x75330700
#define DW_E56_DATAPATH_CFG1		0x1430
#define DW_E56_DATAPATH_CFG1_10G	0x55555555
#define DW_E56_DATAPATH_CFG1_DEFAULT	0x75337533
#define DW_E56_AN_CFG1			0x1438
#define DW_E56_AN0_RATE_SELECT_REG	GENMASK(4, 0)
#define DW_E56_AN0_RATE_SELECT_REG_2	(0x2 << 0)
#define DW_E56_AN0_RATE_SELECT_REG_A	(0xA << 0)
#define DW_E56_AN0_RATE_SELECT_REG_D	(0xD << 0)
#define DW_E56_AN1_RATE_SELECT_REG	GENMASK(12, 8)
#define DW_E56_AN1_RATE_SELECT_REG_2	(0x2 << 8)
#define DW_E56_AN1_RATE_SELECT_REG_A	(0xA << 8)
#define DW_E56_AN1_RATE_SELECT_REG_D	(0xD << 8)
#define DW_E56_AN2_RATE_SELECT_REG	GENMASK(20, 16)
#define DW_E56_AN2_RATE_SELECT_REG_2	(0x2 << 16)
#define DW_E56_AN2_RATE_SELECT_REG_A	(0xA << 16)
#define DW_E56_AN2_RATE_SELECT_REG_D	(0xD << 16)
#define DW_E56_AN3_RATE_SELECT_REG	GENMASK(28, 24)
#define DW_E56_AN3_RATE_SELECT_REG_2	(0x2 << 24)
#define DW_E56_AN3_RATE_SELECT_REG_A	(0xA << 24)
#define DW_E56_AN3_RATE_SELECT_REG_D	(0xD << 24)
#define DW_E56_CTRL_FSM_CFG0		0x1440
#define DW_E56_CONT_ON_ADC_GAIN_CAL_ERR	BIT(5)
#define DW_E56_DO_RX_ADC_OFST_CAL	GENMASK(9, 8)
#define DW_E56_DO_RX_ADC_OFST_CAL_3	(0x3 << 8)
#define DW_E56_RX_ERR_ACTION_EN		GENMASK(31, 24)
#define DW_E56_CTRL_FSM_CFG1		0x1444
#define DW_E56_TRAIN_ST0_WAIT_CNT	GENMASK(7, 0)
#define DW_E56_TRAIN_ST0_WAIT_CNT_FF	(0xFF << 0)
#define DW_E56_TRAIN_ST1_WAIT_CNT	GENMASK(15, 8)
#define DW_E56_TRAIN_ST1_WAIT_CNT_FF	(0xFF << 8)
#define DW_E56_TRAIN_ST2_WAIT_CNT	GENMASK(23, 16)
#define DW_E56_TRAIN_ST2_WAIT_CNT_FF	(0xFF << 16)
#define DW_E56_TRAIN_ST3_WAIT_CNT	GENMASK(31, 24)
#define DW_E56_TRAIN_ST3_WAIT_CNT_FF	(0xFF << 24)
#define DW_E56_CTRL_FSM_CFG2		0x1448
#define DW_E56_TRAIN_ST4_WAIT_CNT	GENMASK(7, 0)
#define DW_E56_TRAIN_ST4_WAIT_CNT_1	(0x1 << 0)
#define DW_E56_TRAIN_ST5_WAIT_CNT	GENMASK(15, 8)
#define DW_E56_TRAIN_ST5_WAIT_CNT_4	(0x4 << 8)
#define DW_E56_TRAIN_ST6_WAIT_CNT	GENMASK(23, 16)
#define DW_E56_TRAIN_ST6_WAIT_CNT_4	(0x4 << 16)
#define DW_E56_TRAIN_ST7_WAIT_CNT	GENMASK(31, 24)
#define DW_E56_TRAIN_ST7_WAIT_CNT_4	(0x4 << 24)
#define DW_E56_CTRL_FSM_CFG3		0x144C
#define DW_E56_TRAIN_ST8_WAIT_CNT	GENMASK(7, 0)
#define DW_E56_TRAIN_ST8_WAIT_CNT_4	(0x4 << 0)
#define DW_E56_TRAIN_ST9_WAIT_CNT	GENMASK(15, 8)
#define DW_E56_TRAIN_ST9_WAIT_CNT_4	(0x4 << 8)
#define DW_E56_TRAIN_ST10_WAIT_CNT	GENMASK(23, 16)
#define DW_E56_TRAIN_ST10_WAIT_CNT_4	(0x4 << 16)
#define DW_E56_TRAIN_ST11_WAIT_CNT	GENMASK(31, 24)
#define DW_E56_TRAIN_ST11_WAIT_CNT_4	(0x4 << 24)
#define DW_E56_CTRL_FSM_CFG4		0x1450
#define DW_E56_TRAIN_ST12_WAIT_CNT	GENMASK(7, 0)
#define DW_E56_TRAIN_ST12_WAIT_CNT_4	(0x4 << 0)
#define DW_E56_TRAIN_ST13_WAIT_CNT	GENMASK(15, 8)
#define DW_E56_TRAIN_ST13_WAIT_CNT_4	(0x4 << 8)
#define DW_E56_TRAIN_ST14_WAIT_CNT	GENMASK(23, 16)
#define DW_E56_TRAIN_ST14_WAIT_CNT_4	(0x4 << 16)
#define DW_E56_TRAIN_ST15_WAIT_CNT	GENMASK(31, 24)
#define DW_E56_TRAIN_ST15_WAIT_CNT_4	(0x4 << 24)
#define DW_E56_CTRL_FSM_CFG7		0x145C
#define DW_E56_TRAIN_ST4_EN		GENMASK(15, 0)
#define DW_E56_TRAIN_ST4_EN_4BF		(0x4BF << 0)
#define DW_E56_TRAIN_ST5_EN		GENMASK(31, 16)
#define DW_E56_TRAIN_ST5_EN_C4BF	(0xC4BF << 16)
#define DW_E56_CTRL_FSM_CFG8		0x1460
#define DW_E56_TRAIN_ST7_EN		GENMASK(31, 16)
#define DW_E56_TRAIN_ST7_EN_47FF	(0x47FF << 16)
#define DW_E56_CTRL_FSM_CFG12		0x1470
#define DW_E56_TRAIN_ST15_EN		GENMASK(31, 16)
#define DW_E56_TRAIN_ST15_EN_67FF	(0x67FF << 16)
#define DW_E56_TRAIN_ST15_EN_0090	(0x0090 << 16)
#define DW_E56_CTRL_FSM_CFG13		0x1474
#define DW_E56_TRAIN_ST0_DONE_EN	GENMASK(15, 0)
#define DW_E56_TRAIN_ST0_DONE_EN_8001	(0x8001 << 0)
#define DW_E56_TRAIN_ST1_DONE_EN	GENMASK(31, 16)
#define DW_E56_TRAIN_ST1_DONE_EN_8002	(0x8002 << 16)
#define DW_E56_CTRL_FSM_CFG14		0x1478
#define DW_E56_TRAIN_ST3_DONE_EN	GENMASK(31, 16)
#define DW_E56_TRAIN_ST3_DONE_EN_8008	(0x8008 << 16)
#define DW_E56_CTRL_FSM_CFG15		0x147C
#define DW_E56_TRAIN_ST4_DONE_EN	GENMASK(15, 0)
#define DW_E56_TRAIN_ST4_DONE_EN_8004	(0x8004 << 0)
#define DW_E56_CTRL_FSM_CFG29		0x14B4
#define DW_E56_TRAIN_ST15_DC_EN		GENMASK(31, 16)
#define DW_E56_TRAIN_ST15_DC_EN_3F6D	(0x3F6D << 16)
#define DW_E56_CTRL_FSM_CFG33		0x14C4
#define DW_E56_TRAIN0_RATE_SEL		GENMASK(15, 0)
#define DW_E56_TRAIN0_RATE_SEL_8000	(0x8000 << 0)
#define DW_E56_TRAIN1_RATE_SEL		GENMASK(31, 16)
#define DW_E56_TRAIN1_RATE_SEL_8000	(0x8000 << 16)
#define DW_E56_CTRL_FSM_CFG34		0x14C8
#define DW_E56_TRAIN2_RATE_SEL		GENMASK(15, 0)
#define DW_E56_TRAIN2_RATE_SEL_8000	(0x8000 << 0)
#define DW_E56_TRAIN3_RATE_SEL		GENMASK(31, 16)
#define DW_E56_TRAIN3_RATE_SEL_8000	(0x8000 << 16)
#define DW_E56_CTRL_FSM_CM_STAT0	0x14D4
#define DW_E56_FSM_CM_ST		GENMASK(3, 0)
#define DW_E56_FSM_CM_ST_PLL_RDY	(0x4 << 0)
#define DW_E56_CTRL_FSM_TX_STAT0	0x14DC
#define DW_E56_FSM_TX0_ST		GENMASK(5, 0)
#define DW_E56_FSM_TX0_ST_TX_RDY	(0x8 << 0)
#define DW_E56_CTRL_FSM_RX_STAT0	0x14FC
#define DW_E56_FSM_RX0_ST		GENMASK(5, 0)
#define DW_E56_FSM_RX0_ST_RX_RDY	(0x1B << 0)
#define DW_E56_FSM_RX0_ST_POWERDN	(0x21 << 0)
#define DW_E56_RXS0_OVRDVAL0		0x1540
#define DW_E56_RXS_SAMP_CAL_DONE	BIT(22)
#define DW_E56_RXS0_OVRDEN0		0x1530
#define DW_E56_OVDR_EN_RXS_SAMP_CAL_DONE BIT(27)
#define DW_E56_RXS0_OVRDEN1		0x1534
#define DW_E56_OVRD_EN_RX0_VGA_TRAIN_EN	BIT(14)
#define DW_E56_OVRD_EN_RX0_CTLE_TRAIN_EN	BIT(16)
#define DW_E56_OVRD_EN_RX0_CRD_EN	BIT(18)
#define DW_E56_OVRD_EN_RX0_ADC_INTL_CAL_EN	BIT(23)
#define DW_E56_OVRD_EN_RX0_ADC_INTL_CAL_DONE	BIT(24)
#define DW_E56_RXS0_OVRDEN2		0x1538
#define DW_E56_OVRD_EN_RX0_ADC_OFST_ADAPT_EN	BIT(0)
#define DW_E56_OVRD_EN_RX0_ADC_OFST_ADAPT_DONE	BIT(1)
#define DW_E56_OVRD_EN_RX0_ADC_OFST_ADAPT_ERR	BIT(2)
#define DW_E56_OVRD_EN_RX0_ADC_GAIN_ADAPT_EN	BIT(3)
#define DW_E56_OVRD_EN_RX0_ADC_GAIN_ADAPT_DONE	BIT(4)
#define DW_E56_OVRD_EN_RX0_ADC_GAIN_ADAPT_ERR	BIT(5)
#define DW_E56_OVRD_EN_RX0_ADC_INTL_ADAPT_EN	BIT(6)
#define DW_E56_OVRD_EN_RX0_ADC_INTL_ADAPT_DONE	BIT(7)
#define DW_E56_OVRD_EN_RX0_ADC_INTL_ADAPT_ERR	BIT(8)
#define DW_E56_RXS0_OVRDVAL1		0x1544
#define DW_E56_RX0_VGA_TRAIN_EN		BIT(7)
#define DW_E56_RX0_CTLE_TRAIN_EN	BIT(9)
#define DW_E56_RX0_CDR_EN		BIT(11)
#define DW_E56_RX0_ADC_INTL_CAL_EN	BIT(16)
#define DW_E56_RX0_ADC_INTL_CAL_DONE	BIT(17)
#define DW_E56_RX0_ADC_INTL_CAL_ERR	BIT(18)
#define DW_E56_RX0_ADC_OFST_ADAPT_EN	BIT(25)
#define DW_E56_RX0_ADC_OFST_ADAPT_DONE	BIT(26)
#define DW_E56_RX0_ADC_OFST_ADAPT_ERR	BIT(27)
#define DW_E56_RX0_ADC_GAIN_ADAPT_EN	BIT(28)
#define DW_E56_RX0_ADC_GAIN_ADAPT_DONE	BIT(29)
#define DW_E56_RX0_ADC_GAIN_ADAPT_ERR	BIT(30)
#define DW_E56_RX0_ADC_INTL_ADAPT_EN	BIT(31)
#define DW_E56_RXS0_OVRDVAL1_ERR_MASK1	(DW_E56_RX0_ADC_INTL_CAL_ERR | DW_E56_RX0_ADC_OFST_ADAPT_ERR | DW_E56_RX0_ADC_GAIN_ADAPT_ERR)
#define DW_E56_RXS0_OVRDVAL1_ERR_MASK2	(DW_E56_RX0_ADC_INTL_CAL_ERR | DW_E56_RX0_ADC_OFST_ADAPT_ERR)
#define DW_E56_RXS0_OVRDVAL2		0x1548
#define DW_E56_RX0_ADC_INTL_ADAPT_DONE	BIT(0)
#define DW_E56_RX0_ADC_INTL_ADAPT_ERR	BIT(1)
#define DW_E56_PMD_INTR0		0x15EC
#define DW_E56_INTR_RX_OSC_FREQ_ERR	BIT(8)
#define DW_E56_PMD_INTR2		0x15F4
#define DW_E56_INTR_CTRL_FSM_RX_ERR	BIT(0)
#define DW_E56_PMD_SPARE4		0x1608
#define DW_E56_SPARE4			GENMASK(7, 0)
#define DW_E56_SPARE4_3F		(0x3F << 0)
#define DW_E56_KRT_TFSM_CFG		0x16B8
#define DW_E56_TFSM_MAX_WAIT_TIMER_X1M	GENMASK(7, 0)
#define DW_E56_MAX_WAIT_TIMER_X1M_49	(0x49 << 0)
#define DW_E56_TFSM_MAX_WAIT_TIMER_X8M	GENMASK(15, 8)
#define DW_E56_MAX_WAIT_TIMER_X8M_37	(0x37 << 8)
#define DW_E56_TFSM_HOLDOFF_TIMER_X256K	GENMASK(23, 16)
#define DW_E56_HOLDOFF_TIMER_X245K_2F	(0x2F << 16)
#define DW_E56_PMD_SPARE52		0x16FC
#define DW_E56_SPARE52			GENMASK(7, 0)
#define DW_E56_SPARE52_F0		(0xF0 << 0)


int xgbe_e56_serdes_probe(struct dw_eth_dev *priv);
int xgbe_e56_serdes_tx_config(struct dw_eth_dev *priv);
int xgbe_e56_serdes_rx_config(struct dw_eth_dev *priv);
int xgbe_serdes_rx2tx_lb(struct dw_eth_dev *priv, u8 enable);
int xgbe_serdes_tx2rx_lb(struct dw_eth_dev *priv, u8 enable);

#endif /* __XGBE_XPCS_H__ */
